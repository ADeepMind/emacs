#include <iostream>
#include <vector>

using namespace std;

 string longestPalindrome(string s) {
        const int N = 1000;
        int m[N][N];
        m[0][0] = 1;
        int len = s.length();
        for (int i = 1; i < len; ++i) {
            m[i][i] = 1;
            m[i][i-1] = 1;
        }
        int l = 0, r = 0;
        for (int s1 = 2; s1 <= len; ++s1) {
            for (int j = 0; j <= len - s1; ++j) {
                int i = j + s1 - 1;
                if (s[j] == s[i] && m[j+1][i-1]) {
                    m[j][i] = 1;
                    if (r-l+1 < s1) {
                        l = j;
                        r = i;
                    }
                }
                 
            }
        }      
        return s.substr(l, r-l+1);
    }

int main(void) {

  cout << longestPalindrome("abcda") << endl;

  //  using std::cout;
  //  using std::endl;
  //  int number = 7;
  // setting a bit
  //  cout << (number | (1 << 3)) << endl;

  // clearing a bit
  //  cout << (number & ~(1 << 3)) << endl;

  // toggling a bit
  //  cout << (number ^ (1 << 3)) << endl;

  
  return 0;
}
