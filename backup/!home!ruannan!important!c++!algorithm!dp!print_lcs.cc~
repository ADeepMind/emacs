#include <iostream>
#include <string>
#include <vector>
#include <set>
#include <algorithm>
using namespace std;

constexpr int Max = 200;
int lookup[Max][Max];

string lcs(string x, string y, int m, int n) {
  if (m == 0 || n == 0)
    return "";
  if (x[m-1] == y[n-1])
    return lcs(x, y, m-1, n-1) + x[m-1];
  if (lookup[m][n] > lookup[m][n-1])
    return lcs(x, y, m-1, n);
  return lcs(x, y, m, n-1);
}

void lcs_length(string x, string y, int m, int n) {

  for (int i = 1; i <= m; ++i) {
    for (int j = 1; j <= n; ++j) {
      if (x[i-1] == y[j-1])
	lookup[i][j] = lookup[i-1][j-1] + 1;
      else
	lookup[i][j] = max(lookup[i-1][j], lookup[i][j-1]);
    }
  }
}

int main(int argc, char *argv[]) {

  string x, y;
  cin >> x >> y;
  lcs_length(x, y, x.length(), y.length());
  cout << lcs(x, y, x.length(), y.length()) << "\n";
  return 0;
}
