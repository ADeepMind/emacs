
class ServerThread extends Thread {

    private User user;
    private List<User> list;

    public ServerThread(User user, List<User> list) {
        this.user = user;
        this.list = list;
    }
    public void run() {
        try {
            while (true) {
                String msg= user.getBr().readLine();
                System.out.println(msg);
                String[] str = msg.split(":");
                sendToClient(str[1], msg); // 转发信息给特定的用户
            }
        } catch (Exception e) {
            System.out.println("异常");
        } finally {
            try {
                user.getBr().close();
                user.getSocket().close();
            } catch (IOException e) {
                e.printStackTrace();
            }
        }
    }
    private void sendToClient(String username, String msg) {
        for (User user : list) {
            if (user.getName().equals(username)) {
                try {
                    PrintWriter pw =user.getPw();
                    pw.println(msg);
                    pw.flush();
                } catch (Exception e) {
                    e.printStackTrace();
                }
            }
        }
    }
}

public class Server {
    public static void main(String[] args) throws IOException {
        int i=0;
        List<User> list = new ArrayList<User>();
        @SuppressWarnings("resource")
        ServerSocket serverSocket = new ServerSocket(9999);
        System.out.println("服务端正在开始~");
        System.out.println("信息的格式   发送人:收发人:信息体");
        while (true) {
            Socket socket = serverSocket.accept();
            User user = new User("user" + ++i,socket);
            System.out.println(user.getName() + "正在登录。。。");
            list.add(user);
            ServerThread thread = new ServerThread(user, list);
            thread.start();
        }
    }
}
